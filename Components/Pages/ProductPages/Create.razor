@page "/products/create"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using OnlineShop.Models
@inject IDbContextFactory<OnlineShop.Data.AppDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>محصول جدید</PageTitle>

<h1 class="mt-5">اطلاعات محصول جدید را وارد کنید</h1>
<hr />
<div class="row text-black mb-5">
    <div class="col-md-5 text-black">
        <EditForm method="post" Model="Product" OnValidSubmit="AddProduct" FormName="create" Enhance>
            <DataAnnotationsValidator />
            @* <ValidationSummary class="text-danger" /> *@
            <div class="mb-3">
                <label for="name" class="form-label">نام کالا:</label> 
                <InputText id="name" @bind-Value="Product.Name" class="form-control" /> 
                <ValidationMessage For="() => Product.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="image" class="form-label">آدرس عکس کالا:</label> 
                <InputText id="image" @bind-Value="Product.Image" class="form-control" /> 
                <ValidationMessage For="() => Product.Image" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="description" class="form-label">توضیحات:</label> 
                <InputTextArea id="description" @bind-Value="Product.Description" class="form-control" /> 
                <ValidationMessage For="() => Product.Description" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="price" class="form-label">قیمت:</label> 
                <InputNumber id="price" @bind-Value="Product.Price" class="form-control" /> 
                <ValidationMessage For="() => Product.Price" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="stock" class="form-label">موجودی:</label> 
                <InputNumber id="stock" @bind-Value="Product.Stock" class="form-control" /> 
                <ValidationMessage For="() => Product.Stock" class="text-danger" /> 
            </div>            
            <button type="submit" class="btn btn-primary">ساخت محصول</button>
        </EditForm>
    </div>
</div>


@code {
    [SupplyParameterFromForm]
    private Product Product { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddProduct()
    {
        using var context = DbFactory.CreateDbContext();
        context.Products.Add(Product);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/");
    }
}
